//
//  GenreListViewController.swift
//  synema
//
//  Created by syndromme on 23/06/19.
//  Copyright (c) 2019 syndromme. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol GenreListDisplayLogic: class
{
  func displayGenres(result: [Genre])
  func displayFilter()
}

class GenreListViewController: BaseTableVC, GenreListDisplayLogic
{
  var interactor: GenreListBusinessLogic?
  var router: (NSObjectProtocol & GenreListRoutingLogic & GenreListDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = GenreListInteractor()
    let presenter = GenreListPresenter()
    let router = GenreListRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  func setupNav() {
    let leftBarButtonItem = UIBarButtonItem(title: "Reset", style: .done, target: self, action: #selector(resetAction(_:)))
    self.navigationItem.leftBarButtonItem = leftBarButtonItem
    
    let rightBarButtonItem = UIBarButtonItem(title: "Save", style: .done, target: self, action: #selector(saveAction(_:)))
    self.navigationItem.rightBarButtonItem = rightBarButtonItem
  }
  
  func setupTableView() {
    tableView.dataSource = self
    tableView.delegate = self
    tableView.separatorInset = .zero
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  var genres: [Genre] = []
  var selectedGenres: [Genre] = []
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    title = "Genre"
    setupNav()
    setupTableView()
    
    interactor?.fetchGenres()
    selectedGenres = router?.dataStore?.genres ?? []
  }
  
  // MARK: Display
  func displayGenres(result: [Genre]) {
    genres = result
    tableView.reloadData()
  }
  
  func displayFilter() {
    router?.routeToDiscovery()
  }
  
  //  MARK: Action
  @IBAction func resetAction(_ sender: Any) {
    selectedGenres = []
    tableView.reloadData()
    interactor?.clearGenre()
  }
  
  @IBAction func saveAction(_ sender: Any) {
    interactor?.setGenre(selectedGenres: selectedGenres)
  }
}

extension GenreListViewController: UITableViewDataSource {
  func numberOfSections(in tableView: UITableView) -> Int {
    return 1
  }
  
  func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
    return genres.count
  }
  
  func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
    let cell = UITableViewCell(style: .default, reuseIdentifier: "cell")
    let genre = genres[indexPath.row]
    let g = selectedGenres.filter{ $0.genreID == genre.genreID }
    cell.textLabel?.text = genre.genreName
    cell.accessoryType = g.count > 0 ? .checkmark : .none
    return cell
  }
}

extension GenreListViewController: UITableViewDelegate {
  func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
    return UITableView.automaticDimension
  }
  
  func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
    tableView.deselectRow(at: indexPath, animated: true)
    let genre = genres[indexPath.row]
    let g = selectedGenres.filter{ $0.genreID == genre.genreID }
    if g.count > 0 {
      selectedGenres.removeAll{ $0.genreID == genre.genreID }
    } else {
      selectedGenres.append(genre)
    }
    tableView.reloadData()
  }
}
