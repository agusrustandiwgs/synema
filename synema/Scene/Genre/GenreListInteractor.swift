//
//  GenreListInteractor.swift
//  synema
//
//  Created by syndromme on 23/06/19.
//  Copyright (c) 2019 syndromme. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import RxSwift
import Moya

protocol GenreListBusinessLogic
{
  func fetchGenres()
  func setGenre(selectedGenres: [Genre])
  func clearGenre()
}

protocol GenreListDataStore
{
  var genres: [Genre] { get set }
}

class GenreListInteractor: GenreListBusinessLogic, GenreListDataStore
{
  var presenter: GenreListPresentationLogic?
  var worker: GenreListWorker?
  var genres: [Genre] = []
  
  // MARK:
  func fetchGenres() {
    worker = GenreListWorker()
    worker?.requestGenres()
      .subscribeOn(ConcurrentDispatchQueueScheduler(qos: .background))
      .observeOn(MainScheduler.instance)
      .subscribe(onSuccess: { (result) in
      self.presenter?.presentGenres(response: result.genres)
    }, onError: { (error) in
      let errorDict = [Constant.errorKey : error.localizedDescription]
      NotificationCenter.default.post(name: NSNotification.Name(rawValue: "error"), object: nil, userInfo: errorDict as [AnyHashable : Any])
    })
  }
  
  func setGenre(selectedGenres: [Genre]) {
    genres = selectedGenres
    presenter?.presentFilter()
  }
  
  func clearGenre() {
    genres = []
  }
}
