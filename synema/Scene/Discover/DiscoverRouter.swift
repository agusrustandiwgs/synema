//
//  DiscoverRouter.swift
//  synema
//
//  Created by syndromme on 24/06/19.
//  Copyright (c) 2019 syndromme. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol DiscoverRoutingLogic
{
  func routeToMovieDetail()
  func routeToGenre()
}

protocol DiscoverDataPassing
{
  var dataStore: DiscoverDataStore? { get }
}

class DiscoverRouter: NSObject, DiscoverRoutingLogic, DiscoverDataPassing
{
  weak var viewController: DiscoverViewController?
  var dataStore: DiscoverDataStore?
  
  // MARK: Routing
  
  func routeToMovieDetail() {
    let destinationVC = MovieDetailViewController(nibName: "BaseTableView", bundle: nil)
    var destinationDS = destinationVC.router!.dataStore!
    passDataToMovieDetail(source: dataStore!, destination: &destinationDS)
    navigateToMovieDetail(source: viewController!, destination: destinationVC)
  }
  
  func routeToGenre() {
    let destinationVC = GenreListViewController(nibName: "BaseTableView", bundle: nil)
    var destinationDS = destinationVC.router!.dataStore!
    passDataToGenre(source: dataStore!, destination: &destinationDS)
    navigateToGenre(source: viewController!, destination: destinationVC)
  }

  // MARK: Navigation
  
  func navigateToMovieDetail(source: DiscoverViewController, destination: MovieDetailViewController)
  {
    source.show(destination, sender: nil)
  }
  
  func navigateToGenre(source: DiscoverViewController, destination: GenreListViewController)
  {
    let nav = UINavigationController(rootViewController: destination)
    source.present(nav, animated: true, completion: nil)
  }
  
  // MARK: Passing data
  
  func passDataToMovieDetail(source: DiscoverDataStore, destination: inout MovieDetailDataStore)
  {
    destination.movie = source.movie
  }
  
  func passDataToGenre(source: DiscoverDataStore, destination: inout GenreListDataStore)
  {
    destination.genres = source.genres
  }
}
