//
//  MovieDetailModels.swift
//  synema
//
//  Created by syndromme on 24/06/19.
//  Copyright (c) 2019 syndromme. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import ObjectMapper

enum MovieDetail
{
  // MARK: Use cases
  
  enum APIModel
  {
    class Request: Mappable
    {
      var apiKey: String = ""
      var page: Int = 1
      
      required init?(map: Map) {
        apiKey          = (try? map.value("api_key")) ?? Constant.movieDBKey
      }
      
      func mapping(map: Map) {
        page            <- map["page"]
        apiKey          <- map["api_key"]
      }
      
    }
    
    class ResponseDetail: Mappable
    {
      var movie: Movie
      
      required init?(map: Map) {
        movie = Movie()
      }
      
      func mapping(map: Map) {
        movie    <- map
      }
    }
    
    class ResponseReview: Mappable
    {
      var reviews: [MovieReview] = []
      
      required init?(map: Map) {
        
      }
      
      func mapping(map: Map) {
        reviews    <- map["results"]
      }
    }
    
    class ResponseTrailer: Mappable
    {
      var trailers: [MovieTrailer] = []
      
      required init?(map: Map) {
        
      }
      
      func mapping(map: Map) {
        trailers    <- map["results"]
      }
    }
    
    class ViewModel: Mappable
    {
      required init?(map: Map) {
        
      }
      
      func mapping(map: Map) {
        
      }
      
    }
  }
}

enum TabSelection {
  case Left
  case Middle
  case Right
}
